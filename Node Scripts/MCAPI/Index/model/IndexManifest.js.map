{"version":3,"sources":["../../node_modules/@adsk/bim360-nucleus-index/src/model/IndexManifest.js"],"names":["IndexManifest","containerId","schema","modelSetId","status","seedFiles","errors","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","IndexManifestSeedFile","BasicError","prototype","undefined"],"mappings":"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","file":"IndexManifest.js","sourcesContent":["/**\n * Nucleus Model Set Index API\n * BIM 360 Indexing Service\n *\n * OpenAPI spec version: 1.2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport BasicError from './BasicError';\nimport IndexManifestSeedFile from './IndexManifestSeedFile';\n\n/**\n * The IndexManifest model module.\n * @module model/IndexManifest\n * @version 1.2.0\n */\nclass IndexManifest {\n    /**\n     * Constructs a new <code>IndexManifest</code>.\n     * @alias module:model/IndexManifest\n     * @param containerId {String} The container ID\n     * @param schema {String} The indexing schema sem version\n     * @param modelSetId {String} The model set ID\n     * @param status {module:model/IndexManifest.StatusEnum} The status of the model set version index\n     * @param seedFiles {Array.<module:model/IndexManifestSeedFile>} \n     * @param errors {Array.<module:model/BasicError>} \n     */\n    constructor(containerId, schema, modelSetId, status, seedFiles, errors) { \n        IndexManifest.initialize(this, containerId, schema, modelSetId, status, seedFiles, errors);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj, containerId, schema, modelSetId, status, seedFiles, errors) { \n        obj['containerId'] = containerId;\n        obj['schema'] = schema;\n        obj['modelSetId'] = modelSetId;\n        obj['status'] = status;\n        obj['seedFiles'] = seedFiles;\n        obj['errors'] = errors;\n    }\n\n    /**\n     * Constructs a <code>IndexManifest</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/IndexManifest} obj Optional instance to populate.\n     * @return {module:model/IndexManifest} The populated <code>IndexManifest</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new IndexManifest();\n\n            if (data.hasOwnProperty('containerId')) {\n                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');\n            }\n            if (data.hasOwnProperty('schema')) {\n                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');\n            }\n            if (data.hasOwnProperty('modelSetId')) {\n                obj['modelSetId'] = ApiClient.convertToType(data['modelSetId'], 'String');\n            }\n            if (data.hasOwnProperty('modelSetVersion')) {\n                obj['modelSetVersion'] = ApiClient.convertToType(data['modelSetVersion'], 'Number');\n            }\n            if (data.hasOwnProperty('status')) {\n                obj['status'] = ApiClient.convertToType(data['status'], 'String');\n            }\n            if (data.hasOwnProperty('seedFiles')) {\n                obj['seedFiles'] = ApiClient.convertToType(data['seedFiles'], [IndexManifestSeedFile]);\n            }\n            if (data.hasOwnProperty('errors')) {\n                obj['errors'] = ApiClient.convertToType(data['errors'], [BasicError]);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * The container ID\n * @member {String} containerId\n */\nIndexManifest.prototype['containerId'] = undefined;\n\n/**\n * The indexing schema sem version\n * @member {String} schema\n */\nIndexManifest.prototype['schema'] = undefined;\n\n/**\n * The model set ID\n * @member {String} modelSetId\n */\nIndexManifest.prototype['modelSetId'] = undefined;\n\n/**\n * The model set version\n * @member {Number} modelSetVersion\n */\nIndexManifest.prototype['modelSetVersion'] = undefined;\n\n/**\n * The status of the model set version index\n * @member {module:model/IndexManifest.StatusEnum} status\n */\nIndexManifest.prototype['status'] = undefined;\n\n/**\n * @member {Array.<module:model/IndexManifestSeedFile>} seedFiles\n */\nIndexManifest.prototype['seedFiles'] = undefined;\n\n/**\n * @member {Array.<module:model/BasicError>} errors\n */\nIndexManifest.prototype['errors'] = undefined;\n\n\n\n\n\n/**\n * Allowed values for the <code>status</code> property.\n * @enum {String}\n * @readonly\n */\nIndexManifest['StatusEnum'] = {\n\n    /**\n     * value: \"Failed\"\n     * @const\n     */\n    \"Failed\": \"Failed\",\n\n    /**\n     * value: \"Running\"\n     * @const\n     */\n    \"Running\": \"Running\",\n\n    /**\n     * value: \"Succeeded\"\n     * @const\n     */\n    \"Succeeded\": \"Succeeded\"\n};\n\n\n\nexport default IndexManifest;\n\n"]}
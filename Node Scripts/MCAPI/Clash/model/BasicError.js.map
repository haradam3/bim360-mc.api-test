{"version":3,"sources":["../../node_modules/@adsk/bim360-nucleus-clash/src/model/BasicError.js"],"names":["BasicError","type","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","prototype","undefined"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;AAaA;;;;;;;;AAEA;;;;;IAKMA,U;AACF;;;;;;AAMA,sBAAYC,IAAZ,EAAkB;AAAA;;AACdD,eAAWE,UAAX,CAAsB,IAAtB,EAA4BD,IAA5B;AACH;;AAED;;;;;;;;;+BAKkBE,G,EAAKF,I,EAAM;AACzBE,UAAI,MAAJ,IAAcF,IAAd;AACH;;AAED;;;;;;;;;;wCAO2BG,I,EAAMD,G,EAAK;AAClC,UAAIC,IAAJ,EAAU;AACND,cAAMA,OAAO,IAAIH,UAAJ,EAAb;;AAEA,YAAII,KAAKC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,cAAI,MAAJ,IAAcG,oBAAUC,aAAV,CAAwBH,KAAK,MAAL,CAAxB,EAAsC,QAAtC,CAAd;AACH;AACD,YAAIA,KAAKC,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BF,cAAI,OAAJ,IAAeG,oBAAUC,aAAV,CAAwBH,KAAK,OAAL,CAAxB,EAAuC,QAAvC,CAAf;AACH;AACD,YAAIA,KAAKC,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAC/BF,cAAI,QAAJ,IAAgBG,oBAAUC,aAAV,CAAwBH,KAAK,QAAL,CAAxB,EAAwC,QAAxC,CAAhB;AACH;AACJ;AACD,aAAOD,GAAP;AACH;;;;;;AAKL;;;;;;AAIAH,WAAWQ,SAAX,CAAqB,MAArB,IAA+BC,SAA/B;;AAEA;;;;AAIAT,WAAWQ,SAAX,CAAqB,OAArB,IAAgCC,SAAhC;;AAEA;;;;AAIAT,WAAWQ,SAAX,CAAqB,QAArB,IAAiCC,SAAjC;;kBAOeT,U","file":"BasicError.js","sourcesContent":["/**\n * Clash Service\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * OpenAPI spec version: 3.3.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\n\n/**\n * The BasicError model module.\n * @module model/BasicError\n * @version 3.3.12\n */\nclass BasicError {\n    /**\n     * Constructs a new <code>BasicError</code>.\n     * An Error associated with a Resource\n     * @alias module:model/BasicError\n     * @param type {String} The Error Code\n     */\n    constructor(type) { \n        BasicError.initialize(this, type);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj, type) { \n        obj['type'] = type;\n    }\n\n    /**\n     * Constructs a <code>BasicError</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/BasicError} obj Optional instance to populate.\n     * @return {module:model/BasicError} The populated <code>BasicError</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new BasicError();\n\n            if (data.hasOwnProperty('type')) {\n                obj['type'] = ApiClient.convertToType(data['type'], 'String');\n            }\n            if (data.hasOwnProperty('title')) {\n                obj['title'] = ApiClient.convertToType(data['title'], 'String');\n            }\n            if (data.hasOwnProperty('detail')) {\n                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * The Error Code\n * @member {String} type\n */\nBasicError.prototype['type'] = undefined;\n\n/**\n * A short title for Error\n * @member {String} title\n */\nBasicError.prototype['title'] = undefined;\n\n/**\n * A more detailed, human readable description of error. The assumption being that this message will not be localized and therefore EN-US. UI consumers can use error.type value to provide a localized version of this error for presentation\n * @member {String} detail\n */\nBasicError.prototype['detail'] = undefined;\n\n\n\n\n\n\nexport default BasicError;\n\n"]}
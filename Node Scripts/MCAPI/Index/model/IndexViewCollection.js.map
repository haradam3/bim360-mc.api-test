{"version":3,"sources":["../../node_modules/@adsk/bim360-nucleus-index/src/model/IndexViewCollection.js"],"names":["IndexViewCollection","page","views","initialize","obj","data","hasOwnProperty","CollectionPage","constructFromObject","ApiClient","convertToType","IndexView","prototype","undefined"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;AAaA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;;IAKMA,mB;AACF;;;;;;;AAOA,+BAAYC,IAAZ,EAAkBC,KAAlB,EAAyB;AAAA;;AACrBF,wBAAoBG,UAApB,CAA+B,IAA/B,EAAqCF,IAArC,EAA2CC,KAA3C;AACH;;AAED;;;;;;;;;+BAKkBE,G,EAAKH,I,EAAMC,K,EAAO;AAChCE,UAAI,MAAJ,IAAcH,IAAd;AACAG,UAAI,OAAJ,IAAeF,KAAf;AACH;;AAED;;;;;;;;;;wCAO2BG,I,EAAMD,G,EAAK;AAClC,UAAIC,IAAJ,EAAU;AACND,cAAMA,OAAO,IAAIJ,mBAAJ,EAAb;;AAEA,YAAIK,KAAKC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,cAAI,MAAJ,IAAcG,yBAAeC,mBAAf,CAAmCH,KAAK,MAAL,CAAnC,CAAd;AACH;AACD,YAAIA,KAAKC,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BF,cAAI,OAAJ,IAAeK,oBAAUC,aAAV,CAAwBL,KAAK,OAAL,CAAxB,EAAuC,CAACM,mBAAD,CAAvC,CAAf;AACH;AACJ;AACD,aAAOP,GAAP;AACH;;;;;;AAKL;;;;;AAGAJ,oBAAoBY,SAApB,CAA8B,MAA9B,IAAwCC,SAAxC;;AAEA;;;;AAIAb,oBAAoBY,SAApB,CAA8B,OAA9B,IAAyCC,SAAzC;;kBAOeb,mB","file":"IndexViewCollection.js","sourcesContent":["/**\n * Nucleus Model Set Index API\n * BIM 360 Indexing Service\n *\n * OpenAPI spec version: 1.2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport CollectionPage from './CollectionPage';\nimport IndexView from './IndexView';\n\n/**\n * The IndexViewCollection model module.\n * @module model/IndexViewCollection\n * @version 1.2.0\n */\nclass IndexViewCollection {\n    /**\n     * Constructs a new <code>IndexViewCollection</code>.\n     * A set of index views.\n     * @alias module:model/IndexViewCollection\n     * @param page {module:model/CollectionPage} \n     * @param views {Array.<module:model/IndexView>} List of index views\n     */\n    constructor(page, views) { \n        IndexViewCollection.initialize(this, page, views);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj, page, views) { \n        obj['page'] = page;\n        obj['views'] = views;\n    }\n\n    /**\n     * Constructs a <code>IndexViewCollection</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/IndexViewCollection} obj Optional instance to populate.\n     * @return {module:model/IndexViewCollection} The populated <code>IndexViewCollection</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new IndexViewCollection();\n\n            if (data.hasOwnProperty('page')) {\n                obj['page'] = CollectionPage.constructFromObject(data['page']);\n            }\n            if (data.hasOwnProperty('views')) {\n                obj['views'] = ApiClient.convertToType(data['views'], [IndexView]);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {module:model/CollectionPage} page\n */\nIndexViewCollection.prototype['page'] = undefined;\n\n/**\n * List of index views\n * @member {Array.<module:model/IndexView>} views\n */\nIndexViewCollection.prototype['views'] = undefined;\n\n\n\n\n\n\nexport default IndexViewCollection;\n\n"]}